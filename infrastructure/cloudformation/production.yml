AWSTemplateFormatVersion: '2010-09-09'
Description: 'CareerCanvas API Management Production Infrastructure'

Parameters:
  Environment:
    Type: String
    Default: production
    AllowedValues:
      - production
      - staging

Resources:
  ApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: !Sub careercanvas-api-${Environment}
      EndpointConfiguration:
        Types:
          - REGIONAL

  ApiLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: DynamoDBAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:*
                Resource: '*'

  ApiFunction:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub careercanvas-api-${Environment}
      Handler: dist/lambda.handler
      Runtime: nodejs18.x
      Role: !GetAtt ApiLambdaRole.Arn
      AutoPublishAlias: live
      MemorySize: 1024
      Timeout: 30
      Environment:
        Variables:
          NODE_ENV: !Ref Environment

  ApiGatewayDeployment:
    Type: AWS::ApiGateway::Deployment
    DependsOn: ApiFunction
    Properties:
      RestApiId: !Ref ApiGateway
      StageName: !Ref Environment

  ScalingTarget:
    Type: AWS::ApplicationAutoScaling::ScalableTarget
    Properties:
      MaxCapacity: 10
      MinCapacity: 1
      ResourceId: !Sub function:${ApiFunction}:${Environment}
      RoleARN: !GetAtt ApiLambdaRole.Arn
      ScalableDimension: lambda:function:ProvisionedConcurrency
      ServiceNamespace: lambda

  ScalingPolicy:
    Type: AWS::ApplicationAutoScaling::ScalingPolicy
    Properties:
      PolicyName: LambdaConcurrencyScaling
      PolicyType: TargetTrackingScaling
      ScalingTargetId: !Ref ScalingTarget
      TargetTrackingScalingPolicyConfiguration:
        TargetValue: 0.7
        PredefinedMetricSpecification:
          PredefinedMetricType: LambdaProvisionedConcurrencyUtilization

Outputs:
  ApiEndpoint:
    Description: API Gateway endpoint URL
    Value: !Sub https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/${Environment}